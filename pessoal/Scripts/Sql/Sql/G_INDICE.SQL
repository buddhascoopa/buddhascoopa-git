-- Blu, 06/02/96.
-- Script com a finalidade de criar índices em uma tabela
-- pedindo que o usuário informe o índice e o owner do mesmo.
-- I:\Trabalho\Ana\Prontos\G_INDICE.SQL

SET PAGESIZE 10000
SET ECHO OFF
ACCEPT OWNER_IND CHAR PROMPT 'Digite o OWNER do Índice: '
ACCEPT NOME_IND CHAR PROMPT 'Digite o NOME do Índice: '
SET VERIFY OFF
SET FEEDBACK OFF

CREATE TABLE INDICE (NOME VARCHAR2 (200), SEQUENCIA NUMBER (03));

DECLARE

  NOM_INDICE        	VARCHAR2(35);
  OWNER_INDICE  	VARCHAR2(35);
  PARTE1      		VARCHAR2(100);
  PARTE2       		VARCHAR2(100);
  SEQ          		NUMBER(05) := 1;
  AUX          		NUMBER(5);
  AUX1         		NUMBER(5);
  ERRO_OWNER      	EXCEPTION;
  ERRO_INDICE       	EXCEPTION;
  
 
  CURSOR     CURSOR0 (INDICE VARCHAR2, OWNER1 VARCHAR2) IS
                SELECT OWNER, INDEX_NAME, TABLE_OWNER, TABLE_NAME,
                INI_TRANS, MAX_TRANS, TABLESPACE_NAME, PCT_FREE,
                INITIAL_EXTENT, NEXT_EXTENT, MIN_EXTENTS, MAX_EXTENTS,
                PCT_INCREASE
                FROM ALL_INDEXES
                WHERE INDEX_NAME LIKE INDICE
                AND OWNER = OWNER1;
   
  CURSOR     CURSOR1 (INDICE VARCHAR2)  IS
                SELECT COLUMN_NAME FROM ALL_IND_COLUMNS
                WHERE INDEX_NAME LIKE INDICE
                GROUP BY COLUMN_NAME; 

  REC0       CURSOR0%ROWTYPE;
  REC1       CURSOR1%ROWTYPE;
  
BEGIN
  
  NOM_INDICE := UPPER('&NOME_IND');
  OWNER_INDICE := UPPER('&OWNER_IND');
   
  OPEN CURSOR0 (NOM_INDICE,OWNER_INDICE);
  


  --*************************** INICIO PROGRAMA PRINCIPAL ****************************

  SEQ:= SEQ+1;
  INSERT INTO INDICE VALUES ('CONNECT '||OWNER_INDICE,SEQ);

LOOP
 
  FETCH CURSOR0 INTO REC0;
  EXIT WHEN CURSOR0%NOTFOUND;
      
  IF REC0.OWNER <> OWNER_INDICE THEN
       RAISE ERRO_OWNER;
  END IF;               

  SELECT COUNT(*) INTO AUX FROM ALL_IND_COLUMNS WHERE 
  INDEX_NAME = REC0.INDEX_NAME;          


  --**************************  CRIACAO DO INDICE  *************************************
  
  PARTE1:=  ' CREATE INDEX ' || REC0.OWNER || '.' || REC0.INDEX_NAME;
  PARTE2:=  ' ON ' || REC0.TABLE_OWNER || '.' || REC0.TABLE_NAME;
  SEQ:= SEQ+1;
  INSERT INTO INDICE VALUES (PARTE1,SEQ);
  SEQ:= SEQ+1;
  INSERT INTO INDICE VALUES (PARTE2,SEQ);
  OPEN CURSOR1 (NOM_INDICE);
  AUX1:= 1;
  SEQ:= SEQ+1;
  INSERT INTO INDICE VALUES (' (', SEQ);
  LOOP
      FETCH CURSOR1 INTO REC1;
      EXIT WHEN CURSOR1%NOTFOUND;
      PARTE1:= ' ' ||REC1.COLUMN_NAME;
      IF AUX > AUX1 THEN
         PARTE1:= PARTE1 || ',';
         AUX1:=AUX1+1;
      ELSE      
         PARTE1:= PARTE1 || ' )';
      END IF;
      SEQ:=SEQ+1;
      INSERT INTO INDICE VALUES (PARTE1,SEQ); 
  END LOOP;

  IF REC0.INI_TRANS <> NULL THEN
    PARTE1:= ' INITRANS ' || REC0.INI_TRANS;
    SEQ:= SEQ+1;
    INSERT INTO INDICE VALUES (PARTE1,SEQ);
  END IF;  

  IF REC0.MAX_TRANS <> NULL THEN
    PARTE1:= ' MAXTRANS ' || REC0.MAX_TRANS;
    SEQ:= SEQ+1;
    INSERT INTO INDICE VALUES (PARTE1,SEQ);
  END IF;
  IF REC0.TABLESPACE_NAME <> NULL THEN
    PARTE1:= ' TABLESPACE '  || REC0.TABLESPACE_NAME;
    SEQ:= SEQ+1;
    INSERT INTO INDICE VALUES (PARTE1,SEQ);
  END IF;

  IF ((REC0.INITIAL_EXTENT <> NULL) OR (REC0.NEXT_EXTENT <> NULL) OR
     (REC0.MIN_EXTENTS <> NULL) OR (REC0.MAX_EXTENTS <> NULL) OR
     (REC0.PCT_INCREASE <> NULL)) THEN
       PARTE1:= ' STORAGE ( ';
       SEQ:= SEQ+1;
       INSERT INTO INDICE VALUES (PARTE1,SEQ);

    IF REC0.INITIAL_EXTENT <> NULL THEN
       PARTE1:= ' INITIAL '  || REC0.INITIAL_EXTENT;
       SEQ:= SEQ+1;
       INSERT INTO INDICE VALUES (PARTE1,SEQ);
    END IF;

    IF REC0.NEXT_EXTENT <> NULL THEN
       PARTE1:= ' NEXT '  || REC0.NEXT_EXTENT;
       SEQ:= SEQ+1;
       INSERT INTO INDICE VALUES (PARTE1,SEQ);
    END IF;

    IF REC0.MIN_EXTENTS <> NULL THEN
       PARTE1:= ' MINEXTENDS '  || REC0.MIN_EXTENTS;
       SEQ:= SEQ+1;
       INSERT INTO INDICE VALUES (PARTE1,SEQ);
    END IF;

    IF REC0.MAX_EXTENTS <> NULL THEN
       PARTE1:= ' MAXEXTENDS '  || REC0.MAX_EXTENTS;
       SEQ:= SEQ+1;
       INSERT INTO INDICE VALUES (PARTE1,SEQ);
    END IF;

    IF REC0.PCT_INCREASE <> NULL THEN
       PARTE1:= ' PCTINCREASE '  || REC0.PCT_INCREASE;
       SEQ:= SEQ+1;
       INSERT INTO INDICE VALUES (PARTE1,SEQ);
    END IF;

    PARTE1:= ' ) ';
    SEQ:= SEQ+1;
    INSERT INTO INDICE VALUES (PARTE1,SEQ);

  END IF;

  IF REC0.PCT_FREE <> NULL THEN
     PARTE1:= ' PCTFREE ' || REC0.PCT_FREE;
     SEQ:= SEQ+1;
     INSERT INTO INDICE VALUES (PARTE1,SEQ);
  END IF;

  PARTE1:= ' TABLESPACE; ';
  SEQ:= SEQ+1;
  INSERT INTO INDICE VALUES (PARTE1,SEQ);

  PARTE1:= '/ ';
  SEQ:= SEQ+1;
  INSERT INTO INDICE VALUES (PARTE1,SEQ);
    
CLOSE CURSOR1;
END LOOP;
CLOSE CURSOR0;


--**************************** FIM PROGRAMA PRINCIPAL  ******************************

EXCEPTION
    WHEN ERRO_OWNER then
      RAISE_APPLICATION_ERROR(-20101, UPPER (OWNER_INDICE) || 
                             ' não é owner do Indice ' ||
                             UPPER(REC0.INDEX_NAME) );
    WHEN ERRO_INDICE THEN
      RAISE_APPLICATION_ERROR(-20101, 'Indice ' || UPPER (rec0.index_name) || 
                             ' inexistente.');

END;
/
SET HEA OFF
SET PAUSE OFF
SET LINESIZE 200
SPOOL C_INDICE.SQL
SELECT NOME FROM INDICE ORDER BY SEQUENCIA;
SPOOL OFF
SET HEA ON
SET VERIFY ON
DROP TABLE INDICE;
SET FEEDBACK ON
